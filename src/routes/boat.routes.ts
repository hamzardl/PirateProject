import { Router } from 'express';
import { BoatController } from '../controllers/boat.controller';
import { authenticateToken } from '../middleware/authToken.middleware';
import { isAdminRequired } from '../middleware/isAdminAuthToken.middleware';
import { AuthController } from '../controllers/AuthController';
export const createBoatRoutes = (): Router => {
  const boatController  = new BoatController();
  const authController = new AuthController();
  const router = Router();
  router.get('/boats',authenticateToken, boatController.getAllBoats);
  router.post('/boat',authenticateToken,isAdminRequired, boatController.addBoat);
  router.delete('/boat/:id',authenticateToken,isAdminRequired,boatController.deleteBoat);
  router.patch('/boat/:id',authenticateToken,isAdminRequired, boatController.modifyBoat);
  router.post('/auth', authController.login);
  router.post('/register', authController.register);
  router.post('/navigateToAnotherPort/:destination',authenticateToken,isAdminRequired,boatController.navigateToAnotherPort);
  router.get('/getAvailablePorts',authenticateToken,isAdminRequired, boatController.getAvailablePorts);
  router.post('/ship/dock', boatController.getBoatsOnPort);
  return router;
};